spring.application.name=sirnilin
server.port=${PORT:8080}

spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=${POSTGRES_USERNAME:backend_user}
spring.datasource.password=${POSTGRES_PASSWORD:backend_password}
spring.datasource.url=${POSTGRES_JDBC_URL:jdbc:postgresql://localhost:5433/backend_db}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.datasource.hikari.maximum-pool-size=30
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000


redis.host=${REDIS_HOST:localhost}
redis.port=${REDIS_PORT:6379}

service.url=${SERVICE_URL:http://localhost:8081}

# Kafka settings
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}

# Producer settings
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=prod.individual.sirnilin.configurations.HistoryEventSerializer
spring.kafka.producer.acks=all

# Consumer settings
spring.kafka.consumer.group-id=ads-consumer-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=prod.individual.sirnilin.configurations.HistoryEventDeserializer
spring.kafka.consumer.auto-offset-reset=earliest


# Admin settings
spring.kafka.admin.auto-create-topics=true
